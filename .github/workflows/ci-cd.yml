name: Simple CI/CD Pipeline

on:
  push:
    branches: [ master ]

jobs:
  pipeline:
    runs-on: [self-hosted]
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup
      run: |
        apt-get update && apt-get install -y python3 python3-pip wget unzip
        ln -sf /usr/bin/python3 /usr/bin/python
        ln -sf /usr/bin/pip3 /usr/bin/pip
    
    - name: Unit Tests
      run: |
        cd codebase
        pip install -r requirements.txt pytest pytest-cov
        python -m pytest tests/ --cov=app --cov-fail-under=50
    
    - name: SonarQube
      run: |
        cd codebase
        wget -q https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
        unzip -q sonar-scanner-cli-4.8.0.2856-linux.zip
        ./sonar-scanner-4.8.0.2856-linux/bin/sonar-scanner \
          -Dsonar.projectKey=auth-service \
          -Dsonar.sources=. \
          -Dsonar.host.url=http://sonarqube:9000 \
          -Dsonar.login=admin \
          -Dsonar.password=admin
    
    - name: Build & Security Scan
      run: |
        cd codebase
        docker build -t auth-service:${{ github.sha }} .
        trivy image --server http://trivy-server:4954 \
          --severity CRITICAL --exit-code 1 \
          auth-service:${{ github.sha }}
    
    - name: Load Test
      run: |
        echo "Load testing..."
        curl -X POST http://locust-master:8089/swarm -d "user_count=10&spawn_rate=2"
        sleep 30
        curl -X GET http://locust-master:8089/stop
    
    - name: Push to ECR
      if: github.ref == 'refs/heads/main'
      run: |
        cd codebase
        aws ecr get-login-password --region us-east-1 | \
          docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}
        docker tag auth-service:${{ github.sha }} ${{ secrets.ECR_REGISTRY }}/auth-service:${{ github.sha }}
        docker push ${{ secrets.ECR_REGISTRY }}/auth-service:${{ github.sha }}
